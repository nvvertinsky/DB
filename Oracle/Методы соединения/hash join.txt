Hash join

Описание:
  - Является превосходным способом объединения двух больших наборов данных или большого набора данных с маленьким. 
  - Получение первой строки требует значительного кол-ва времени, посколько один из наборов должен быть хеширован.
  - Но это окупится при получении оставшихся строк. Особенно если хеш-таблица умещается в памяти.

Пример работы:
  
  select t1.object_name,
	 t2.object_name
    from t t1,
	 t t2
   where t1.object_id = t2.object_id
     and t1.owner = 'WMSYS';

  - Oracle возьмет самую маленькую из двух таблиц (в примере это будут результаты t1.owner = 'WMSYS', после полного сканирования таблицы) и создаст хеш-таблицу с этими результатами.
  - Если таблица помещается в оперативную память, то Oracle поместит ее в оперативную память.
  - Ключ соединения OBJECT_ID так же будет хеширован и будет использоваться как индекс в хеш-таблице
  - Затем производится сканирование большой таблицы.
  - Для каждой строки большой таблицы Oracle хеширует OBJECT_ID и находит в хеш-таблице соответствующие строки.
  - Если соответствующие строки нашлись, то выводим их


ps. 
Если хеш-таблица не умещается в памяти, то Oracle будет использовать пространство TEMP.
  - При переполнении области хеширования, Oracle находит самый большой раздел в хеш-таблице и записывает его в     TEMP.
  - Часть хеш-таблицы находится в памяти, а часть на диске.
  - Затем Oracle начинает сканировать другую таблицу. 
  - Все так же будет хешироваться ключ-значение из другой таблице.
  - Если хэшированное значение указывает на строку памяти, соединение является законченным.Строка возвращается.
  - Если хэшированное значение указывает на диске, Oracle сохранит эту строку в TEMP.
  - Затем Oracle проведет поочередную обработку каждого временного раздела на диске, считает их в память и     соеденит.
  - Затем выдаст окончательный ответ.