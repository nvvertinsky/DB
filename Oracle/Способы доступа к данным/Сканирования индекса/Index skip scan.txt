Index skip scan

Особенности: Может возникнуть при использовании в составных индексах, когда не задан лидирующий столбец.

Условия:
  1. Есть составной индекс (col1, col2)
  2. В условии where мы указываем только col2. Не указывая ведущий столбец col1.

Как работает:
  1. Для лидирующего столбца сначала ищем все уникальные значения. count(distinct col1)
  2. Дальше для каждого уникального значения выполняется range scan с учетом значения заданных столбцов.
     сol1 = 1 and col2 = 99
     col1 = 2 and col2 = 99
     col3 = 3 and col2 = 99 

Пример:
create index emp_name_ix on employees (last_name, first_name);
 
select * from employees t where t.first_name = 'Mark';

В предикатах не задан лидирующий столбец (“last_name”) индекса.

Уникальных значений 102. select count(distinct t.last_name) from employees t;

Будет построено 102 условных поисковых дерева и по каждому будет совершен поиск:
where (last_name = ‘i-ое last_name’ and first_name = ‘Mark’).
where (last_name = ‘i-ое last_name’ and first_name = ‘Mark’).
where (last_name = ‘i-ое last_name’ and first_name = ‘Mark’).
...

Если лидирующий столбец имеет большое количество уникальных значений, скорее всего, index skip scan выбран не будет.
Но тут надо понимать, что лидирующим столбцом в B-tree индексах, лучше использовать столбец, как раз таки, с большим разнообразием значений.

Наличие skip scan - это повод для оптимизации.