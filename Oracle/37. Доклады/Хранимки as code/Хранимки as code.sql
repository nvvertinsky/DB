/*
1. Когда и почему стоит использовать хранимки:
  - В качестве дополнительного слоя абстракции (см "Дополнительный слой абстракции.png")
    - Переиспользование кода 
    - Инкапсуляция 
    - Разделение ответственности. Выделяете отдельно разработчика баз данных и отдельно разработчиков приложений

2. Безопасность
  - Ограничение возможных действий над данными 
  - Внедрить сложную ролевую модель. Например запретить менять таблицу всем, кроме Васи 
  - Аудит
  - Административная функциональность без привилегий superuser

3. Локальность данных. Не нужно таскать данные по сети.

*/


/*
Когда и почему не стоит писать хранимки:

1. Не нужно писать бизнес логику. Так как бизнес логика будет размазана по приложению и БД

2. Если нет компетенций по процедурному языку

3. Сложно интегрироваться с ORM. 

4. Зависимость от конкретной БД

5. Сложно маштабируется БД

6. Неатомарный деплой. Хранимки выкатываются отдельно от приложения

*/


/*
Best practice по работе с хранимками

1. Использовать систему контроля версий для хранимок

2. Использовать принципы программирования

3. Юнит тесты

4. Код ревью
*/